description = "VDR Jonglisto application"

apply plugin: "war"
apply plugin: "java"
apply plugin: "jetty"
apply plugin: 'eclipse-wtp'

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

group = "vdr.jonglisto"
version = "0.0.1"

repositories {
    mavenLocal()

    mavenCentral()

    maven {
        name "JBoss"
        url "http://repository.jboss.org/nexus/content/groups/public/"
    }
        
    maven {
        name "Apache Staging"
        url "https://repository.apache.org/content/groups/staging"
    }
    
    maven {
    	name "Hampelratte Releases"
    	url "http://hampelratte.org/nexus/content/groups/releases"
    }
    
    maven {
    	name "Hampelratte Releases"
    	url "http://hampelratte.org/maven/releases"
    }
}

configurations {
    embeddedJetty {
		transitive = false
    }       
}

sourceSets {
    main.java.srcDirs += ['gensrc']
    main.compileClasspath += configurations.embeddedJetty
}


// sourceSets.main.compileClasspath += configurations.embeddedJetty

dependencies {

    compile  'org.apache.tapestry:tapestry-core:5.4.1'
	compile  'org.apache.tapestry:tapestry-ioc:5.4.1'
	compile  'org.apache.tapestry:tapestry-webresources:5.4.1'
	// compile  'org.got5:tapestry5-jquery:4.1+'
	
    compile  'org.apache.commons:commons-dbcp2:2.1.1'
   	compile  'org.sql2o:sql2o:1.6.0-RC2'   	
	compile  'mysql:mysql-connector-java:5.1.40'
	compile  'org.hsqldb:hsqldb:2.3.4'
	
	// compile  'org.apache.shiro:shiro-core:1.3+'
	// compile  'org.apache.shiro:shiro-web:1.3+'
    // compile  'org.tynamo:tapestry-security:0.6+' 

	compile  'org.apache.httpcomponents:httpclient:4.5.2'
	compile  'org.apache.commons:commons-lang3:3.4'
    compile  'org.apache.commons:commons-collections4:4.1'
	compile  'commons-beanutils:commons-beanutils:1.9.3'
	
	compile  'com.fasterxml.jackson.core:jackson-annotations:2.8.3'
	compile  'com.fasterxml.jackson.core:jackson-databind:2.8.3'
	compile  'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.6.7'
	compile  'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.7'
    compile  'com.fasterxml.jackson.module:jackson-module-afterburner:2.8.3'
	
	compile  'com.mashape.unirest:unirest-java:1.4.9'
	
    compile  'ch.qos.logback:logback-classic:1.1.7'
	
	compile  'org.hampelratte:svdrp4j:1.1.0'
	
	embeddedJetty 'org.eclipse.jetty:jetty-runner:9.3.12.v20160915'
}

task standaloneWar(type: War) {
 	from "build/classes/main"
 	include "starter/"
 	exclude "vdr"

	delete 'build/extracted-jetty'

	copy {
	     from configurations.embeddedJetty.collect {
	     	project.zipTree(it)
	     }
	     into 'build/extracted-jetty'
    }
 
 	from 'build/extracted-jetty'
	exclude "META-INF/*.SF", "META-INF/*.RSA", "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"
	include '**'
 	
	manifest { attributes 'Main-Class': 'starter.JettyStarter' }
}

eclipse {
    classpath {
        plusConfigurations += [ configurations.embeddedJetty ]
    }
    
    wtp {
		component {
    		sourceDirs += new File(project.getProjectDir().getAbsolutePath() + '/gensrc')
    	}
	}    
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

// TODO: Configure execution mode for jettyRun task
